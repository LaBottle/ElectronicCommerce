@inject IProductService ProductService
@implements IDisposable

<h2 style="text-align: center;">最热门的三件商品</h2>
@if (ProductService.Products == null || ProductService.Sales == null) {
    <span class="spinner-border spinner-border-sm"></span>
    <span>@ProductService.Message</span>
}
else if (ProductService.Products.Count == 0) {
    <span>@ProductService.Message</span>
}
else {
    <div class="container">
        @foreach (var product in ProductService.Products) {
                <div class="featured-product">
                    <a href="product/@product.Id">
                        <img src="@product.ImageUrl" alt="@product.Title"/>
                    </a>
                    <h4>
                        <a href="product/@product.Id">@product.Title</a>
                    </h4>
                    @if (product.Varients != null && product.Varients.Any()) {
                        <h5 class="price">
                            ￥@product.Varients[0].Price
                        </h5>
                    }
                </div>
        }
    </div>
}

@code {

    protected override void OnInitialized() {
        ProductService.ProductsChange += StateHasChanged;
    }

    public void Dispose() {
        ProductService.ProductsChange -= StateHasChanged;
    }

}