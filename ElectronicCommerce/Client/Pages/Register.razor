@page "/register"
@inject IAuthService AuthService
<h3>注册</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="userName">用户名</label>
        <InputText id="userName" @bind-Value="user.UserName" class="form-control"/>
        <ValidationMessage For="() => user.UserName"/>
    </div>
    <div class="mb-3">
        <label for="password">密码</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"/>
        <ValidationMessage For="() => user.Password"/>
    </div>
    <div class="mb-3">
        <label for="confirmPassword">确认密码</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="() => user.ConfirmPassword"/>
    </div>
    <button type="submit" class="btn btn-primary">注册</button>
    <div class="@(succeed ? "text-success" : "text-danger")">
        <span>@message </span>
        @if (succeed) {
            <br/><span>恭喜你注册成功！点击<a href="login">这里</a>登录</span>
        }
    </div>
</EditForm>

@code {
    UserRegister user = new();

    string message = string.Empty;
    bool succeed = false;

    async Task HandleRegistration() {
        var result = await AuthService.Register(user);
        message = result.Message;
        succeed = result.Success;
    }

}